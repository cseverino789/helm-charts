apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "overops-receiver-server.fullname" . }}
  labels:
    {{- if eq .Values.overops.target "fargate" }}
    target: fargate
    {{- end }}
    {{- include "overops-receiver-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- if eq .Values.overops.target "fargate" }}
      target: fargate
      {{- end }}
      {{- include "overops-receiver-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- if eq .Values.overops.target "fargate" }}
        target: fargate
        {{- end }}
        {{- include "overops-receiver-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "overops-receiver-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: OVEROPS_RECEIVER_TYPE
              value: {{ .Values.overops.type | quote }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "overops-receiver-server.secretName" . }}
                  key: db-password
            - name: RMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "overops-receiver-server.secretName" . }}
                  key: rmq-password                   

          resources:
            {{- if and (eq .Values.overops.target "fargate") (eq .Values.overops.rabbitQueue.type "decompile") }}
            requests:
              cpu: 1
              memory: "1024Mi"
            limits:
              memory: "2048Mi"
            {{- else if eq .Values.overops.target "fargate" }}
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              memory: "1024Mi"
            {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /opt/overops/private
              name: overops-private

      volumes:
        - name: overops-private
          configMap:
            name: {{ template "overops-receiver-server.fullname" . }}-config
            items:
            - key: application.properties
              path: application.properties
            - key: application-mysql.properties
              path: application-mysql.properties
            - key: application-msg_rabbit.properties
              path: application-msg_rabbit.properties

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
