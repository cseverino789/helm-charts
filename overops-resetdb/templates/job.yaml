apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "overops-resetdb.fullname" . }}
  labels:
    {{- include "overops-resetdb.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  template:
    metadata:
      labels:
        {{- include "overops-resetdb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "overops-resetdb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["mysql"]
          args: ["-h", "$(DB_HOST)", "-u", "$(MYSQL_USER)", "-p$(MYSQL_PASSWORD)", "-e", "SOURCE /opt/overops/reset.sql;"]
          env:
            - name: DB_HOST
              value: {{ .Values.database.host | quote }}
            - name: MYSQL_USER
              value: {{ .Values.database.user | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecret }}
                  key: db-password
          volumeMounts:
            - mountPath: /opt/overops
              name: script-volume
      volumes:
        - name: script-volume
          configMap:
            name: {{ template "overops-resetdb.fullname" . }}-config
            items:
            - key: reset.sql
              path: reset.sql

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
